import{g as n,f as s,z as a}from"./common-6c6ee14b.js";const t='{"title":"Function","frontmatter":{},"headers":[{"level":2,"title":"createI18n","slug":"createi18n"},{"level":3,"title":"Parameters","slug":"parameters"},{"level":3,"title":"Returns","slug":"returns"},{"level":3,"title":"Remarks","slug":"remarks"},{"level":3,"title":"Examples","slug":"examples"},{"level":2,"title":"useI18n","slug":"usei18n"},{"level":3,"title":"Parameters","slug":"parameters-2"},{"level":3,"title":"Returns","slug":"returns-2"},{"level":3,"title":"Remarks","slug":"remarks-2"},{"level":3,"title":"Examples","slug":"examples-2"},{"level":2,"title":"vTDirective","slug":"vtdirective"}],"relativePath":"api/vue-i18n-function.md","lastUpdated":1604046293278.3044}';var p={};const o=a('<h1 id="function"><a class="header-anchor" href="#function" aria-hidden="true">#</a> Function</h1><h2 id="createi18n"><a class="header-anchor" href="#createi18n" aria-hidden="true">#</a> createI18n</h2><p>I18n factory function</p><p><strong>Signature:</strong></p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">createI18n</span><span class="token generic class-name"><span class="token operator">&lt;</span>Options <span class="token keyword">extends</span> I18nOptions <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> Messages <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> LocaleMessageDictionary<span class="token operator">&lt;</span>VueMessageType<span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> LocaleMessageDictionary<span class="token operator">&lt;</span>VueMessageType<span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> DateTimeFormats <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> DateTimeFormat<span class="token operator">&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> DateTimeFormat<span class="token operator">&gt;</span><span class="token punctuation">,</span> NumberFormats <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> NumberFormat<span class="token operator">&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> NumberFormat<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> I18n<span class="token operator">&lt;</span>Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Options<span class="token punctuation">[</span><span class="token string">&#39;legacy&#39;</span><span class="token punctuation">]</span> <span class="token keyword">extends</span> <span class="token class-name"><span class="token builtin">boolean</span></span> <span class="token operator">?</span> Options<span class="token punctuation">[</span><span class="token string">&#39;legacy&#39;</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="parameters"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td>Options</td><td>see the <a href="./vue-i18n-typealias.html#i18noptions">I18nOptions</a></td></tr></tbody></table><h3 id="returns"><a class="header-anchor" href="#returns" aria-hidden="true">#</a> Returns</h3><p><a href="./vue-i18n-interface.html#i18n">I18n</a> object</p><h3 id="remarks"><a class="header-anchor" href="#remarks" aria-hidden="true">#</a> Remarks</h3><p>When you use Legacy API, you need toto specify options of <a href="./vue-i18n-interface.html#vuei18noptions">VueI18nOptions</a> and <code>legacy: true</code> option. When you use composition API, you need to specify options of <a href="./vue-i18n-interface.html#composeroptions">ComposerOptions</a>.</p><h3 id="examples"><a class="header-anchor" href="#examples" aria-hidden="true">#</a> Examples</h3><h4 id="example-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example 1</h4><p>case: for Legacy API</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-i18n&#39;</span>\n\n<span class="token comment">// call with I18n option</span>\n<span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  locale<span class="token operator">:</span> <span class="token string">&#39;ja&#39;</span><span class="token punctuation">,</span>\n  messages<span class="token operator">:</span> <span class="token punctuation">{</span>\n    en<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ja<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n\n<span class="token comment">// install!</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18n<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h4 id="example-2"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example 2</h4><p>case: for composition API</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> createI18n<span class="token punctuation">,</span> useI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-i18n&#39;</span>\n\n<span class="token comment">// call with I18n option</span>\n<span class="token keyword">const</span> i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  legacy<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// you must specify &#39;lagacy: false&#39; option</span>\n  locale<span class="token operator">:</span> <span class="token string">&#39;ja&#39;</span><span class="token punctuation">,</span>\n  messages<span class="token operator">:</span> <span class="token punctuation">{</span>\n    en<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    ja<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// ...</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n    <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">,</span> t <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>\n\n<span class="token comment">// install!</span>\napp<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18n<span class="token punctuation">)</span>\napp<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="usei18n"><a class="header-anchor" href="#usei18n" aria-hidden="true">#</a> useI18n</h2><p>Use Composition API starting function</p><p><strong>Signature:</strong></p><div class="language-typescript"><pre><code><span class="token keyword">export</span> <span class="token keyword">declare</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">useI18n</span><span class="token generic class-name"><span class="token operator">&lt;</span>Options <span class="token keyword">extends</span> UseI18nOptions <span class="token operator">=</span> object<span class="token punctuation">,</span> Messages <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> LocaleMessageDictionary<span class="token operator">&lt;</span>VueMessageType<span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> LocaleMessageDictionary<span class="token operator">&lt;</span>VueMessageType<span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> DateTimeFormats <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> DateTimeFormat<span class="token operator">&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> DateTimeFormat<span class="token operator">&gt;</span><span class="token punctuation">,</span> NumberFormats <span class="token keyword">extends</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> NumberFormat<span class="token operator">&gt;</span> <span class="token operator">=</span> Record<span class="token operator">&lt;</span><span class="token keyword">keyof</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> NumberFormat<span class="token operator">&gt;&gt;</span></span></span><span class="token punctuation">(</span>options<span class="token operator">?</span><span class="token operator">:</span> Options<span class="token punctuation">)</span><span class="token operator">:</span> Composer<span class="token operator">&lt;</span>Options<span class="token punctuation">[</span><span class="token string">&#39;messages&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Options<span class="token punctuation">[</span><span class="token string">&#39;datetimeFormats&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Options<span class="token punctuation">[</span><span class="token string">&#39;numberFormats&#39;</span><span class="token punctuation">]</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>\n</code></pre></div><h3 id="parameters-2"><a class="header-anchor" href="#parameters-2" aria-hidden="true">#</a> Parameters</h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>options</td><td>Options</td><td>See <a href="./vue-i18n-typealias.html#usei18noptions">UseI18nOptions</a></td></tr></tbody></table><h3 id="returns-2"><a class="header-anchor" href="#returns-2" aria-hidden="true">#</a> Returns</h3><p><a href="./vue-i18n-interface.html#composer">Composer</a> object</p><h3 id="remarks-2"><a class="header-anchor" href="#remarks-2" aria-hidden="true">#</a> Remarks</h3><p>This function is mainly used by <code>setup</code>. If options are specified, Composer object is created for each component and you can be localized on the component. If options are not specified, you can be localized using the global Composer.</p><h3 id="examples-2"><a class="header-anchor" href="#examples-2" aria-hidden="true">#</a> Examples</h3><p>case: Component resource base localization</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">&gt;</span></span>{{ t(&#39;language&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>locale<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>en<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ja<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>ja<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>message: {{ t(&#39;hello&#39;) }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-i18n&#39;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token keyword">const</span> <span class="token punctuation">{</span> t<span class="token punctuation">,</span> locale <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n     locale<span class="token operator">:</span> <span class="token string">&#39;ja&#39;</span><span class="token punctuation">,</span>\n     messages<span class="token operator">:</span> <span class="token punctuation">{</span>\n       en<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>\n       ja<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n     <span class="token punctuation">}</span>\n   <span class="token punctuation">}</span><span class="token punctuation">)</span>\n   <span class="token comment">// Something to do ...</span>\n\n   <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> locale <span class="token punctuation">}</span>\n <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><h2 id="vtdirective"><a class="header-anchor" href="#vtdirective" aria-hidden="true">#</a> vTDirective</h2>',32);p.render=function(a,t,p,e,c,l){return s(),n("div",null,[o])};export default p;export{t as __pageData};
